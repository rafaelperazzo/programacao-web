Testing 1/4 : Teste 1
Testing 2/4 : Teste 2
Testing 3/4 : Teste 3
Testing 4/4 : Teste 4

<|--
-Failed tests
Test 1: Teste 1
Test 2: Teste 2
Test 3: Teste 3
Test 4: Teste 4
--|>

<|--
-Test 1: Teste 1 (-5.000)
Incorrect program result
 --- Input ---
> 78
>1.80

 --- Program output ---
>digite o peso em kilos:digite a altura em metros:Traceback (most recent call last):
>  File "imc.py", line 3, in <module>
>    altura=int(input('digite a altura em metros:'))
>ValueError: invalid literal for int() with base 10: '1.80'

 --- Expected output (regular expression)---
>.*NORMAL.*

-Test 2: Teste 2 (-5.000)
Incorrect program result
 --- Input ---
> 90
>1.80

 --- Program output ---
>digite o peso em kilos:digite a altura em metros:Traceback (most recent call last):
>  File "imc.py", line 3, in <module>
>    altura=int(input('digite a altura em metros:'))
>ValueError: invalid literal for int() with base 10: '1.80'

 --- Expected output (regular expression)---
>.*SOBREPESO.*

-Test 3: Teste 3 (-5.000)
Incorrect program result
 --- Input ---
> 110
>1.80

 --- Program output ---
>digite o peso em kilos:digite a altura em metros:Traceback (most recent call last):
>  File "imc.py", line 3, in <module>
>    altura=int(input('digite a altura em metros:'))
>ValueError: invalid literal for int() with base 10: '1.80'

 --- Expected output (regular expression)---
>.*OBESIDADE.*

-Test 4: Teste 4 (-5.000)
Incorrect program result
 --- Input ---
> 180
>1.80

 --- Program output ---
>digite o peso em kilos:digite a altura em metros:Traceback (most recent call last):
>  File "imc.py", line 3, in <module>
>    altura=int(input('digite a altura em metros:'))
>ValueError: invalid literal for int() with base 10: '1.80'

 --- Expected output (regular expression)---
>.*OBESIDADE GRAVE.*

--|>

<|--
-Summary of tests
>+------------------------------+
>|  4 tests run/ 0 tests passed |
>+------------------------------+

--|>

Grade :=>> 0
